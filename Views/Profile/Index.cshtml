@model Milestone__3.Models.User

@{
    ViewData["Title"] = "User Profile";
}

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f4f6f9;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            min-height: 100vh;
        }

        .profile-container {
            width: 95%;
            max-width: 1200px;
            margin: 40px 0;
        }

        .profile-header {
            background-color: white;
            border-radius: 15px;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            padding: 30px;
            margin-bottom: 30px;
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
        }

        .profile-image {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            border: 5px solid #f4f6f9;
            background-color: #e6e9ee;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2.5rem;
            color: #3498db;
        }

        .profile-info {
            flex: 1;
            min-width: 300px;
        }

        .profile-name {
            font-size: 2rem;
            color: #333;
            margin: 0 0 10px 0;
        }

        .profile-role {
            display: inline-block;
            background-color: #3498db;
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            margin-bottom: 15px;
        }

        .profile-email {
            color: #666;
            margin-bottom: 15px;
        }

        .profile-stats {
            display: flex;
            gap: 20px;
            margin-top: 20px;
        }

        .stat-item {
            text-align: center;
            padding: 10px 15px;
            background-color: #f4f6f9;
            border-radius: 10px;
            min-width: 100px;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
            color: #3498db;
        }

        .stat-label {
            font-size: 0.8rem;
            color: #666;
        }

        .profile-actions {
            display: flex;
            align-items: center;
            justify-content: flex-end;
            flex: 1;
            min-width: 200px;
        }

        .profile-section {
            background-color: white;
            border-radius: 15px;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            padding: 30px;
            margin-bottom: 30px;
        }

        .section-title {
            color: #333;
            font-size: 1.3rem;
            margin: 0 0 20px 0;
            padding-bottom: 10px;
            border-bottom: 1px solid #e6e9ee;
        }

        .detail-row {
            display: flex;
            margin-bottom: 15px;
        }

        .detail-label {
            width: 200px;
            font-weight: 600;
            color: #666;
        }

        .detail-value {
            flex: 1;
            color: #333;
        }

        .courses-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin-top: 20px;
        }

            .courses-table thead {
                background-color: #f0f4f8;
            }

            .courses-table th,
            .courses-table td {
                padding: 15px;
                text-align: left;
                border-bottom: 1px solid #e6e9ee;
            }

            .courses-table th {
                color: #2c3e50;
                font-weight: 600;
                text-transform: uppercase;
                font-size: 0.9rem;
            }

            .courses-table tr:hover {
                background-color: #f9fbfc;
                transition: background-color 0.3s ease;
            }

        .course-title {
            font-weight: 600;
            color: #3498db;
        }

        .difficulty-badge {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .difficulty-easy {
            background-color: #dff0d8;
            color: #3c763d;
        }

        .difficulty-medium {
            background-color: #fcf8e3;
            color: #8a6d3b;
        }

        .difficulty-hard {
            background-color: #f2dede;
            color: #a94442;
        }

        .btn {
            display: inline-block;
            padding: 10px 20px;
            border-radius: 5px;
            text-decoration: none;
            font-weight: 600;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

        .btn-primary {
            background-color: #3498db;
            color: white;
        }

        .btn:hover {
            transform: translateY(-2px);
            opacity: 0.9;
        }

        .empty-state {
            padding: 20px;
            text-align: center;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="profile-container">
        <div class="profile-header">
            <div class="profile-image">
                <i class="fas fa-user"></i>
            </div>

            <div class="profile-info">
                <h1 class="profile-name">@Model.FirstName @Model.LastName</h1>
                <div class="profile-role">@Model.Role</div>
                <div class="profile-email">@Model.Email</div>

                <div class="profile-stats">
                    <div class="stat-item">
                        <div class="stat-value">@Model.Country</div>
                        <div class="stat-label">Country</div>
                    </div>

                    @if (Model.Role == "Learner" && ViewBag.EnrolledCourses != null)
                    {
                        <div class="stat-item">
                            <div class="stat-value">@ViewBag.EnrolledCourses.Count</div>
                            <div class="stat-label">Enrolled Courses</div>
                        </div>
                    }

                    @if (Model.Role == "Instructor" && ViewBag.TaughtCourses != null)
                    {
                        <div class="stat-item">
                            <div class="stat-value">@ViewBag.TaughtCourses.Count</div>
                            <div class="stat-label">Teaching Courses</div>
                        </div>
                    }
                </div>
            </div>

            <div class="profile-actions">
                <a href="@Url.Action("Edit", "Profile")" class="btn btn-primary">
                    <i class="fas fa-edit"></i> Edit Profile
                </a>
            </div>
        </div>

        <div class="profile-section">
            <h2 class="section-title">Personal Details</h2>

            <div class="detail-row">
                <div class="detail-label">Full Name</div>
                <div class="detail-value">@Model.FirstName @Model.LastName</div>
            </div>

            <div class="detail-row">
                <div class="detail-label">Email</div>
                <div class="detail-value">@Model.Email</div>
            </div>

            <div class="detail-row">
                <div class="detail-label">Country</div>
                <div class="detail-value">@Model.Country</div>
            </div>

            <div class="detail-row">
                <div class="detail-label">Gender</div>
                <div class="detail-value">@(string.IsNullOrEmpty(Model.Gender) ? "Not specified" : Model.Gender)</div>
            </div>

            <div class="detail-row">
                <div class="detail-label">Role</div>
                <div class="detail-value">@Model.Role</div>
            </div>
        </div>

        @if (Model.Role == "Learner" && ViewBag.EnrolledCourses != null)
        {
            <div class="profile-section">
                <h2 class="section-title">Enrolled Courses</h2>

                @if (ViewBag.EnrolledCourses.Count > 0)
                {
                    <table class="courses-table">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Credit Points</th>
                                <th>Difficulty Level</th>
                                <th>Enrollment Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var enrollment in ViewBag.EnrolledCourses)
                            {
                                <tr>
                                    <td class="course-title">@enrollment.Course.Title</td>
                                    <td>@enrollment.Course.CreditPoints</td>
                                    <td>
                                        <span class="difficulty-badge @GetDifficultyClass(enrollment.Course.DifficultyLevel)">
                                            @GetDifficultyText(enrollment.Course.DifficultyLevel)
                                        </span>
                                    </td>
                                    <td>@enrollment.EnrollmentDate.ToString("MMM dd, yyyy")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="empty-state">
                        <p>No courses enrolled yet.</p>
                    </div>
                }
            </div>
        }

        @if (Model.Role == "Instructor" && ViewBag.TaughtCourses != null)
        {
            <div class="profile-section">
                <h2 class="section-title">Teaching Courses</h2>

                @if (ViewBag.TaughtCourses.Count > 0)
                {
                    <table class="courses-table">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Credit Points</th>
                                <th>Difficulty Level</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var course in ViewBag.TaughtCourses)
                            {
                                <tr>
                                    <td class="course-title">@course.Title</td>
                                    <td>@course.CreditPoints</td>
                                    <td>
                                        <span class="difficulty-badge @GetDifficultyClass(course.DifficultyLevel)">
                                            @GetDifficultyText(course.DifficultyLevel)
                                        </span>
                                    </td>
                                    <td>@course.Status</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="empty-state">
                        <p>No courses teaching yet.</p>
                    </div>
                }
            </div>
        }
    </div>
</body>
</html>

@functions {
    private string GetDifficultyClass(int difficultyLevel)
    {
        return difficultyLevel switch
        {
            1 => "difficulty-easy",
            2 => "difficulty-medium",
            3 => "difficulty-hard",
            _ => ""
        };
    }

    private string GetDifficultyText(int difficultyLevel)
    {
        return difficultyLevel switch
        {
            1 => "Easy",
            2 => "Medium",
            3 => "Hard",
            _ => "Unknown"
        };
    }
}